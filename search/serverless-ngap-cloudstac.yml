service: "cmr-${self:custom.cmrStacName}-api"

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  role: cmrStacRole
  deploymentBucket: ${cf:${opt:stage}.cmrStacDeploymentBucket}
  vpc:
    securityGroupIds:
      - ${cf:${opt:stage}.servicesSecurityGroupId}
    subnetIds: !Split [ ",", "${cf:${opt:stage}.subnetIds}" ]
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
          Resource:
            - "Fn::GetAtt": [searchAfterTable, Arn]
            - "Fn::GetAtt": [conceptTable, Arn]

custom:
  cmrStacName: ${opt:cmr-stac-name}
  cmrStacRelativeRootUrl: ${opt:cmr-stac-relative-root-url, '/stac'}
  logSubscription:
      destinationArn: ${cf:${opt:stage}.logForwardingArn}

functions:
  search-api:
    name: cmr-${self:custom.cmrStacName}-${opt:stage}
    handler: lib/application.handler
    timeout: 60
    events:
      - alb:
          listenerArn: ${cf:${opt:stage}.servicesLbListenerArn}
          priority: ${opt:cmr-lb-priority, 83}
          conditions:
            path: ${self:custom.cmrStacRelativeRootUrl}*
    logSubscription: true
    environment:
      CMR_URL: ${opt:cmr-url}
      CMR_LB_URL: ${opt:cmr-lb-url, 'http://${cf:${opt:stage}.servicesDnsName}'}
      CMR_STAC_RELATIVE_ROOT_URL: ${self:custom.cmrStacRelativeRootUrl}
      BROWSE_PATH: year/month/day
      LOG_DISABLED: false
      LOG_LEVEL: info
      STAC_VERSION: 1.0.0

resources:
  # IAM
  - ${file(resources/iam-cmrStacRole.yml)}
  # DynamoDB
  - ${file(resources/dynamodb-searchAfterCache.yml)}
  - ${file(resources/dynamodb-conceptIdCache.yml)}


plugins:
  - serverless-pseudo-parameters
  - serverless-plugin-log-subscription
