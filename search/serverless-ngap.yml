service: "cmr-${self:custom.cmrStacName}-api"

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  role: cmrStacRole
  deploymentBucket: ${cf:${opt:stage}.cmrStacDeploymentBucket}
  vpc:
    securityGroupIds:
      - ${cf:${opt:stage}.servicesSecurityGroupId}
    subnetIds: !Split [ ",", "${cf:${opt:stage}.subnetIds}" ]
custom:
  cmrStacName: ${opt:cmr-stac-name}
  cmrStacRelativeRootUrl: ${opt:cmr-stac-relative-root-url, '/stac'}
  logSubscription:
      destinationArn: ${cf:${opt:stage}.logForwardingArn}
  docsBucket: cmr-stac-static-bucket-${opt:stage}
  assets:
    targets:
      - bucket:
          Ref: cmrStacDocsBucket
        empty: true
        prefix: docs
        files:
          - source: ./docs/
            globs: '**/index.html'

functions:
  search-api:
    name: cmr-${self:custom.cmrStacName}-${opt:stage}
    handler: lib/application.handler
    timeout: 60
    events:
      - alb:
          listenerArn: ${cf:${opt:stage}.servicesLbListenerArn}
          priority: ${opt:cmr-lb-priority, 83}
          conditions:
            path: ${self:custom.cmrStacRelativeRootUrl}*
    logSubscription: true
    environment:
      CMR_URL: ${opt:cmr-url}
      CMR_LB_URL: ${opt:cmr-lb-url, 'http://${cf:${opt:stage}.servicesDnsName}'}
      CMR_STAC_RELATIVE_ROOT_URL: ${self:custom.cmrStacRelativeRootUrl}
      BROWSE_PATH: year/month/day
      LOG_DISABLED: false
      LOG_LEVEL: info
      STAC_VERSION: 1.0.0

resources:
  Resources:
    cmrStacRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: cmrStacRole-${self:custom.cmrStacName}-${opt:stage}
        PermissionsBoundary: arn:aws:iam::#{AWS::AccountId}:policy/NGAPShRoleBoundary
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "lambda.amazonaws.com"
              Action:
                - "sts:AssumeRole"
    cmrStacDocsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.docsBucket}
    searchAfterCache:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: SearchAfterCache
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
          - AttributeName: value
            AttributeType: S
          - AttributeName: expdate
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        TimeToLiveSpecification:
          - AttributeName: expdate
            Enabled: true
        ProvisionedThroughput:
          ReadCapacityUnits: 100
          WriteCapacityUnits: 100

plugins:
  - serverless-pseudo-parameters
  - serverless-plugin-log-subscription
  - serverless-s3-deploy
